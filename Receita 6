Feito com ajuda do copilot para correção de erros de copilação: https://copilot.microsoft.com/

import 'package:flutter/material.dart';
import 'package:flutter_hooks/flutter_hooks.dart';

class DataService {
  final ValueNotifier<Map<String, dynamic>> tableStateNotifier = ValueNotifier({
    'dataObjects': [],
    'propertyNames': [],
    'columnNames': [],
  });

  // List of functions to load data
  final List<VoidCallback> funcoes = [];

  DataService() {
    funcoes.addAll([carregarSucos, carregarCamisas, carregarBrinquedos]);
  }

  void carregar(index) {
    funcoes[index]();
  }

  void carregarSucos() {
    tableStateNotifier.value = {
      'dataObjects': [
        {
          "name": "Suco de Laranja",
          "origin": "Brasil",
          "type": "Cítrico"
        },
        {
          "name": "Suco de Maçã",
          "origin": "USA",
          "type": "Doce"
        },
        {
          "name": "Suco de Uva",
          "origin": "Itália",
          "type": "Cítrico"
        }
      ],
      'propertyNames': ["name", "origin", "type"],
      'columnNames': ["Nome", "Origem", "Tipo"],
    };
  }

  void carregarCamisas() {
    tableStateNotifier.value = {
      'dataObjects': [
        {
          "name": "Camisa Social",
          "color": "Branca",
          "size": "M"
        },
        {
          "name": "Camisa Polo",
          "color": "Azul",
          "size": "G"
        },
        {
          "name": "Camisa T-Shirt",
          "color": "Preta",
          "size": "P"
        }
      ],
      'propertyNames': ["name", "color", "size"],
      'columnNames': ["Nome", "Cor", "Tamanho"],
    };
  }

  void carregarBrinquedos() {
    tableStateNotifier.value = {
      'dataObjects': [
        {
          "name": "Lego",
          "type": "Blocos de Montar",
          "age_group": "3+"
        },
        {
          "name": "Boneca Barbie",
          "type": "Boneca",
          "age_group": "5+"
        },
        {
          "name": "Carrinho Hot Wheels",
          "type": "Carrinho",
          "age_group": "4+"
        }
      ],
      'propertyNames': ["name", "type", "age_group"],
      'columnNames': ["Nome", "Tipo", "Faixa Etária"],
    };
  }
}

final dataService = DataService();

void main() {
  MyApp app = MyApp();
  runApp(app);
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData(primarySwatch: Colors.deepPurple),
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        appBar: AppBar(
          title: const Text("Dicas"),
        ),
        body: ValueListenableBuilder(
          valueListenable: dataService.tableStateNotifier,
          builder: (_, value, __) {
            return DataTableWidget(
              jsonObjects: value['dataObjects'],
              propertyNames: value['propertyNames'],
              columnNames: value['columnNames'],
            );
          },
        ),
        bottomNavigationBar:
            NewNavBar(itemSelectedCallback: dataService.carregar),
      ),
    );
  }
}

class NewNavBar extends HookWidget {
  final void Function(int) itemSelectedCallback;
  NewNavBar({required this.itemSelectedCallback});

  @override
  Widget build(BuildContext context) {
    var state = useState(0);
    return BottomNavigationBar(
      onTap: (index) {
        state.value = index;
        itemSelectedCallback(index);
      },
      currentIndex: state.value,
      items: const [
        BottomNavigationBarItem(
          label: "Sucos",
          icon: Icon(Icons.local_drink_outlined),
        ),
        BottomNavigationBarItem(
            label: "Camisas", icon: Icon(Icons.local_offer_outlined)),
        BottomNavigationBarItem(
            label: "Brinquedos", icon: Icon(Icons.toys_outlined))
      ],
    );
  }
}

class DataTableWidget extends StatelessWidget {
  final List jsonObjects;
  final List<String> columnNames;
  final List<String> propertyNames;

  DataTableWidget(
      {this.jsonObjects = const [],
      this.columnNames = const ["Nome", "Tipo", "Faixa Etária"],
      this.propertyNames = const ["name", "type", "age_group"]});

  @override
  Widget build(BuildContext context) {
    return DataTable(
      columns: columnNames
          .map((name) => DataColumn(
                  label: Expanded(
                      child: Text(name,
                          style: TextStyle(fontStyle: FontStyle.italic)))))
          .toList(),
      rows: jsonObjects
          .map((obj) => DataRow(
                  cells: propertyNames
                      .map((propName) => DataCell(Text(obj[propName])))
                      .toList()))
          .toList(),
    );
  }
}
